pr:
  branches:
    include:
      - "*"

jobs:
  - job:
    displayName: "Ubuntu develop"
    timeoutInMinutes: 0
    pool: DevOps-Ubuntu

    steps:
      - task: CmdLine@2
        inputs:
          script: "git clone --depth=1 -b factory https://github.com/Nuitka/Nuitka.git Nuitka-factory"
          workingDirectory: ".."

      - task: CmdLine@2
        inputs:
          script: "git clone --depth=1 -b $NUITKA_BRANCH_NAME https://github.com/Nuitka/Nuitka.git Nuitka-develop"
          workingDirectory: ".."
        env:
          "NUITKA_BRANCH_NAME": "$(NUITKA_BRANCH_NAME)"

      - task: Cache@2
        inputs:
          key: '"ubuntu-pipenv" | "$(Build.BuildNumber)"'
          path: "../pipenv_cache"
          restoreKeys: |
            "ubuntu-pipenv"

      - task: CmdLine@2
        inputs:
          script: "python3.11 -m pip install -r requirements.txt"

      - task: CmdLine@2
        inputs:
          script: |
            set -x
            echo "On branch Nuitka-Watch branch $SOURCE_BRANCH for $NUITKA_BRANCH_NAME"

            # Azure doesn't really tell what git branch it is, make this known
            # in git for lookup
            git branch $SOURCE_BRANCH
            git status

            export PIPENV_CACHE_DIR=$(pwd)/../pipenv_cache
            python3.11 ../Nuitka-develop/bin/nuitka --version

            if [[ "$NUITKA_BRANCH_NAME" = hotfix/* ]]
            then
              PR_ARG='--pr=hotfix,Azure-generated'
            elif [[ "$NUITKA_BRANCH_NAME" = release/* ]]
            then
              PR_ARG='--pr=release,Azure-generated'
            elif [[ $NUITKA_BRANCH_NAME = develop ]]
            then
              PR_ARG='--pr=develop,Azure-generated'
            elif [[ $NUITKA_BRANCH_NAME = factory ]]
            then
              PR_ARG='--pr=factory,Azure-generated'
            else
              PR_ARG=""
            fi
            python3.11 ../Nuitka-factory/bin/nuitka-watch --python-version=3.11 --no-pipenv-update --nuitka-binary=../Nuitka-develop/bin/nuitka $PR_ARG
        env:
          "GITHUB_TOKEN": "$(NOBODY_BOT_IDENTITY)"
          "SOURCE_BRANCH": "$(Build.SourceBranchName)"
          "NUITKA_BRANCH_NAME": "$(NUITKA_BRANCH_NAME)"

  - job:
    displayName: "MacOS"
    timeoutInMinutes: 0
    pool:
      vmImage: macos-latest

    steps:
      - task: InstallAppleCertificate@2
        inputs:
          certSecureFile: "macos_test_cert.p12"
          certPwd: "test"
          keychain: "temp"

      - task: CmdLine@2
        inputs:
          script: NONINTERACTIVE=1 sudo /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"

      - task: CmdLine@2
        inputs:
          script: "curl -o python.pkg https://www.python.org/ftp/python/3.10.11/python-3.10.11-macos11.pkg"
          workingDirectory: ".."

      - task: CmdLine@2
        inputs:
          script: "sudo installer -pkg python.pkg -target /"
          workingDirectory: ".."

      - task: CmdLine@2
        inputs:
          script: 'sudo bash "/Applications/Python 3.10/Install Certificates.command"'

      - task: CmdLine@2
        inputs:
          script: "git clone --depth=1 -b factory https://github.com/Nuitka/Nuitka.git Nuitka-factory"
          workingDirectory: ".."

      - task: CmdLine@2
        inputs:
          script: "git clone --depth=1 -b $NUITKA_BRANCH_NAME https://github.com/Nuitka/Nuitka.git Nuitka-develop"
          workingDirectory: ".."
        env:
          "NUITKA_BRANCH_NAME": "$(NUITKA_BRANCH_NAME)"

      - task: Cache@2
        inputs:
          key: '"macos-pipenv" | "$(Build.BuildNumber)"'
          path: "../pipenv_cache"
          restoreKeys: |
            "macos-pipenv"

      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.11"

      - task: CmdLine@2
        inputs:
          script: "python3.11 -m pip install -r requirements.txt"

      - task: CmdLine@2
        inputs:
          script: "PATH=/Library/Frameworks/Python.framework/Versions/3.10/bin:$PATH python3.10 -m pip install -r requirements.txt"

      - task: CmdLine@2
        inputs:
          script: |
            export PIPENV_CACHE_DIR=$(pwd)/../pipenv_cache
            export PATH=/Library/Frameworks/Python.framework/Versions/3.10/bin:$PATH
            python3.10 ../Nuitka-develop/bin/nuitka --version
            bash nuitka-release.sh

  - job:
    displayName: "Windows"
    timeoutInMinutes: 0
    pool: DevOps-Windows

    steps:
      - task: CmdLine@2
        inputs:
          script: |
            git clone --depth=1 -b factory https://github.com/Nuitka/Nuitka.git Nuitka-factory
          workingDirectory: ".."

      - task: CmdLine@2
        inputs:
          script: |
            git clone --depth=1 -b %NUITKA_BRANCH_NAME% https://github.com/Nuitka/Nuitka.git Nuitka-develop
          workingDirectory: ".."
        env:
          "NUITKA_BRANCH_NAME": "$(NUITKA_BRANCH_NAME)"

      - task: Cache@2
        inputs:
          key: '"windows-pipenv" | "$(Build.BuildNumber)"'
          path: "../pipenv_cache"
          restoreKeys: |
            "windows-pipenv"

      - task: CmdLine@2
        inputs:
          script: "python -m pip install -r requirements.txt"

      - task: CmdLine@2
        inputs:
          script: |
            @echo on
            set PIPENV_CACHE_DIR=%CD%\..\pipenv_cache
            if not exist "%PIPENV_CACHE_DIR%" mkdir %PIPENV_CACHE_DIR%
            python ../Nuitka-develop/bin/nuitka --version
            python ../Nuitka-factory/bin/nuitka-watch --python-version=3.11 --no-pipenv-update --nuitka-binary=..\Nuitka-develop\bin\nuitka
